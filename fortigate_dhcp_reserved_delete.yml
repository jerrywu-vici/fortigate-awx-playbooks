---
# =============================================================================
# FortiGate DHCP Reserved Address Delete Playbook v3.0
# 
# 功能說明：
# 1. 根據MAC地址搜尋既有DHCP reserved-address配置
# 2. 將指定MAC的設定還原為保留狀態(Reserved)
# 3. 自動計算保留MAC格式 (ff:ff:ff:ff:f1:XX)
# 4. 要求用戶確認後執行還原操作
# 
# 作者：VICI Network Team
# 版本：v3.0 - Delete功能
# =============================================================================

- name: FortiGate DHCP Reserved Address Delete v3.0
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # =======================================================================
    # 變數定義區
    # =======================================================================
    
    # 用戶輸入參數（從AWX Survey獲取）  
    delete_mac: "{{ delete_mac_param }}"
    
    # FortiGate系統參數
    dhcp_server_id: "{{ server_id | default('3') }}"
    
    # FortiGate連接參數（從AWX Credential自動注入）
    fortigate_host: "{{ fortigate_host }}"
    fortigate_token: "{{ fortigate_access_token }}"
    vdom_name: "{{ fortigate_vdom | default('root') }}"
    
  tasks:
    # =======================================================================
    # 步驟1：參數驗證
    # =======================================================================
    
    - name: "🔍 Validate AWX Credential Parameters"
      ansible.builtin.fail:
        msg: |
          ❌ 缺少必要的FortiGate Credential參數！請確保已正確設定FortiGate Credential。
      when: fortigate_host is not defined or fortigate_token is not defined

    - name: "📋 Display Input Parameters"
      ansible.builtin.debug:
        msg: |
          ==========================================
          📋 FortiGate DHCP Delete 功能
          ==========================================
          🗑️ 要刪除的MAC地址: {{ delete_mac }}
          🏷️  DHCP Server ID: {{ dhcp_server_id }}
          🌐 FortiGate Host: {{ fortigate_host }}
          🏠 VDOM: {{ vdom_name }}
          ==========================================

    # =======================================================================
    # 步驟2：獲取當前DHCP配置
    # =======================================================================
    
    - name: "🔍 Get Current DHCP Reserved Addresses"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        validate_certs: false
        status_code: 200
      register: existing_reservations

    - name: "📊 Display Current Configuration"
      ansible.builtin.debug:
        msg: |
          🔍 DHCP配置獲取結果：
          - 查詢成功: {{ existing_reservations.status == 200 }}
          - 保留位址數量: {{ existing_reservations.json.results | length }}
          
          📋 當前所有reserved-address配置：
          {% if existing_reservations.json.results | length > 0 %}
          {% for addr in existing_reservations.json.results %}
          - ID: {{ addr.id }}, IP: {{ addr.ip }}, MAC: {{ addr.mac }}, 描述: {{ addr.description | default('無') }}
          {% endfor %}
          {% else %}
          （目前沒有任何reserved-address配置）
          {% endif %}

    # =======================================================================
    # 步驟3：搜尋要刪除的MAC
    # =======================================================================

    - name: "🔍 Search for MAC Address to Delete"
      ansible.builtin.set_fact:
        delete_target_object: "{{ item }}"
      loop: "{{ existing_reservations.json.results }}"
      when:
        - delete_target_object is not defined
        - item.mac.lower() == delete_mac.lower()
      loop_control:
        label: "搜尋 MAC {{ item.mac }}"

    - name: "❌ MAC Not Found - Stop Execution"
      ansible.builtin.fail:
        msg: |
          ❌❌❌ 未找到指定的MAC地址！❌❌❌
          
          🔍 搜尋的MAC: {{ delete_mac }}
          📋 目前並沒有這個MAC的設定
          
          💡 請檢查：
          1. MAC地址格式是否正確 (XX:XX:XX:XX:XX:XX)
          2. MAC地址是否確實存在於DHCP Server {{ dhcp_server_id }} 中
          3. MAC地址大小寫是否正確
          
          📋 當前存在的MAC地址：
          {% for addr in existing_reservations.json.results %}
          - {{ addr.mac }} (IP: {{ addr.ip }})
          {% endfor %}
          
          ⚠️ 操作已停止
      when: delete_target_object is not defined

    - name: "📋 Found MAC Configuration to Delete"
      ansible.builtin.debug:
        msg: |
          ✅✅✅ 找到要刪除的MAC配置！✅✅✅
          
          📊 當前配置詳情：
          - ID: {{ delete_target_object.id }}
          - IP地址: {{ delete_target_object.ip }}
          - MAC地址: {{ delete_target_object.mac }}
          - 描述: {{ delete_target_object.description | default('無') }}

    # =======================================================================
    # 步驟4：計算還原後的保留MAC
    # =======================================================================

    - name: "🧮 Calculate Reserved MAC Address"
      ansible.builtin.set_fact:
        # 提取IP的第四段
        ip_fourth_octet: "{{ delete_target_object.ip.split('.')[3] }}"
      when: delete_target_object is defined

    - name: "🔧 Generate Reserved MAC Format"
      ansible.builtin.set_fact:
        # 生成保留MAC格式: ff:ff:ff:ff:f1:XX (XX是IP第四段)
        reserved_mac: "ff:ff:ff:ff:f1:{{ '%02d' | format(ip_fourth_octet | int) }}"
      when: delete_target_object is defined and ip_fourth_octet is defined

    - name: "📋 Display Calculated Reserved MAC"
      ansible.builtin.debug:
        msg: |
          🧮 計算還原MAC地址：
          - IP第四段: {{ ip_fourth_octet }}
          - 還原後MAC: {{ reserved_mac }}
          - 還原規則: ff:ff:ff:ff:f1:{{ '%02d' | format(ip_fourth_octet | int) }}

    # =======================================================================
    # 步驟5：確認刪除操作
    # =======================================================================

    - name: "⚠️ Confirm Delete Operation"
      ansible.builtin.pause:
        prompt: |
          
          ==========================================
          ⚠️  確認刪除操作
          ==========================================
          
          📊 即將還原的配置：
          - ID: {{ delete_target_object.id }}
          - IP地址: {{ delete_target_object.ip }} (保持不變)
          - 當前MAC: {{ delete_target_object.mac }}
          - 還原後MAC: {{ reserved_mac }}
          - 當前描述: {{ delete_target_object.description | default('無') }}
          - 還原後描述: Reserved
          
          🔄 還原規則說明：
          1. IP地址保持不變: {{ delete_target_object.ip }}
          2. MAC地址還原為: {{ reserved_mac }}
             (格式: ff:ff:ff:ff:f1:XX，XX為IP第四段 {{ ip_fourth_octet }})
          3. 描述還原為: Reserved
          
          ⚠️ 此操作將會永久修改FortiGate配置！
          
          請輸入 'yes' 確認執行，或按Enter取消:
      register: delete_confirmation

    - name: "🚫 User Cancelled Delete Operation"
      ansible.builtin.fail:
        msg: |
          ℹ️ℹ️ℹ️ 用戶取消了刪除操作 ℹ️ℹ️ℹ️
          
          📋 操作摘要：
          - 找到的MAC: {{ delete_mac }}
          - 對應的IP: {{ delete_target_object.ip }}
          - 操作狀態: 已取消
          
          💡 配置保持原狀，未進行任何變更
      when: delete_confirmation.user_input | lower != 'yes'

    # =======================================================================
    # 步驟6：執行刪除操作
    # =======================================================================

    - name: "🔧 Execute MAC Delete - Restore to Reserved Configuration"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address/{{ delete_target_object.id }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        body:
          ip: "{{ delete_target_object.ip }}"
          mac: "{{ reserved_mac }}"
          description: "Reserved"
        body_format: json
        validate_certs: false
        status_code: 200
      register: delete_result
      when: delete_confirmation.user_input | lower == 'yes'

    - name: "🎉 MAC Delete Operation Complete"
      ansible.builtin.debug:
        msg: |
          ✅✅✅ MAC刪除操作成功！✅✅✅
          
          📋 還原結果：
          - 配置ID: {{ delete_target_object.id }}
          - IP地址: {{ delete_target_object.ip }} (未變更)
          - 原始MAC: {{ delete_target_object.mac }}
          - 還原後MAC: {{ reserved_mac }}
          - 原始描述: {{ delete_target_object.description | default('無') }}
          - 還原後描述: Reserved
          
          🎯 FortiGate DHCP配置已成功還原為保留狀態！
      when: 
        - delete_result is defined
        - delete_result.json.revision_changed | default(false)

    - name: "❌ MAC Delete Operation Failed"
      ansible.builtin.debug:
        msg: |
          ❌❌❌ MAC刪除操作失敗 ❌❌❌
          
          📋 錯誤詳情：
          {{ delete_result.msg | default('未知錯誤') }}
          
          🔍 HTTP狀態碼: {{ delete_result.status | default('未知') }}
          
          💡 請檢查：
          1. FortiGate連接狀態
          2. API Token權限
          3. DHCP Server ID是否正確
          4. 網路連線是否正常
      when: 
        - delete_result is defined 
        - delete_result is failed

    # =======================================================================
    # 步驟7：最終執行摘要
    # =======================================================================
    
    - name: "📊 Final Execution Summary"
      ansible.builtin.debug:
        msg: |
          ==========================================
          📊 FortiGate DHCP Delete 執行摘要
          ==========================================
          🗑️ 刪除操作結果:
          - 刪除的MAC: {{ delete_mac }}
          - 對應的IP: {{ delete_target_object.ip }}
          - 還原後MAC: {{ reserved_mac }}
          - 狀態: {{ '✅ 成功' if (delete_result is defined and delete_result.json.revision_changed | default(false)) else '🚫 已取消' if (delete_confirmation.user_input | lower != 'yes') else '❌ 失敗' }}
          
          📅 執行時間: {{ ansible_date_time.iso8601 | default('未知') }}
          ==========================================
