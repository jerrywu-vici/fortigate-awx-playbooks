---
- name: FortiGate Unused Policies Extractor (Complete Solution)
  hosts: localhost
  gather_facts: false
  vars:
    fortigate_api_url: "https://{{ fortigate_host }}:{{ fortigate_api_port | default('443') }}"
    
  tasks:
    - name: 🎯 獲取所有 Policy 資料
      uri:
        url: "{{ fortigate_api_url }}/api/v2/monitor/firewall/policy"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        body_format: form-urlencoded
        body:
          vdom: "{{ vdom_name | default('root') }}"
        validate_certs: "{{ fortigate_validate_certs | default(false) }}"
        timeout: 30
      register: all_policies

    - name: 📊 總體統計
      debug:
        msg: |
          ========= 📊 Policy 統計總覽 =========
          🏢 VDOM: {{ vdom_name | default('root') }}
          📋 總 Policies: {{ all_policies.json.results | length }}
          🎯 正在分析 unused policies...
          ====================================

    - name: 🔍 篩選和分析 Unused Policies
      set_fact:
        unused_policies: "{{ all_policies.json.results | selectattr('bytes', 'equalto', 0) | selectattr('packets', 'equalto', 0) | list }}"
        used_policies: "{{ all_policies.json.results | rejectattr('bytes', 'equalto', 0) | list + all_policies.json.results | rejectattr('packets', 'equalto', 0) | list | unique }}"

    - name: 📋 顯示 Unused Policies 清單
      debug:
        msg: |
          ========= 🎯 Unused Policies 清單 =========
          
          📊 Unused Policies: {{ unused_policies | length }} / {{ all_policies.json.results | length }}
          📊 Used Policies: {{ (all_policies.json.results | length) - (unused_policies | length) }}
          
          {% if unused_policies | length > 0 %}
          🔍 詳細清單:
          
          | Policy ID | Last Used | First Used | Hit Count | Session Count |
          |-----------|-----------|------------|-----------|---------------|
          {% for policy in unused_policies | sort(attribute='policyid') %}
          | {{ policy.policyid | string | ljust(9) }} | {{ 'Never' if policy.last_used == 0 else (policy.last_used | int | strftime('%Y-%m-%d %H:%M:%S')) | ljust(9) }} | {{ 'Never' if policy.first_used == 0 else (policy.first_used | int | strftime('%Y-%m-%d %H:%M:%S')) | ljust(10) }} | {{ policy.hit_count | string | ljust(9) }} | {{ policy.session_count | string | ljust(13) }} |
          {% endfor %}
          
          🎯 Summary:
          {% set never_used = unused_policies | selectattr('last_used', 'equalto', 0) | list %}
          {% set old_unused = unused_policies | rejectattr('last_used', 'equalto', 0) | list %}
          
          - Never Used: {{ never_used | length }} policies
          - Previously Used: {{ old_unused | length }} policies
          
          {% if never_used | length > 0 %}
          📋 Never Used Policy IDs: {{ never_used | map(attribute='policyid') | list | sort | join(', ') }}
          {% endif %}
          
          {% else %}
          ✅ 所有 policies 都有使用記錄！
          {% endif %}
          ==========================================

    - name: 📁 獲取 Policy 名稱 (如果需要)
      uri:
        url: "{{ fortigate_api_url }}/api/v2/cmdb/firewall/policy/{{ item.policyid }}"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        body_format: form-urlencoded
        body:
          vdom: "{{ vdom_name | default('root') }}"
        validate_certs: "{{ fortigate_validate_certs | default(false) }}"
        timeout: 10
        status_code: [200, 400, 404]
      register: policy_details
      loop: "{{ unused_policies[:5] }}"  # 只取前5個以免太慢
      failed_when: false
      when: unused_policies | length > 0

    - name: 📋 顯示詳細 Policy 資訊
      debug:
        msg: |
          ========= 📋 Unused Policies 詳細資訊 =========
          
          {% if policy_details is defined and policy_details.results %}
          {% for result in policy_details.results %}
          {% if result.status == 200 %}
          
          🔍 Policy {{ result.item.policyid }}:
          - Name: {{ result.json.results[0].name if result.json.results and result.json.results[0].name is defined else 'N/A' }}
          - Source: {{ result.json.results[0].srcaddr if result.json.results and result.json.results[0].srcaddr is defined else 'N/A' }}
          - Destination: {{ result.json.results[0].dstaddr if result.json.results and result.json.results[0].dstaddr is defined else 'N/A' }}
          - Service: {{ result.json.results[0].service if result.json.results and result.json.results[0].service is defined else 'N/A' }}
          - Action: {{ result.json.results[0].action if result.json.results and result.json.results[0].action is defined else 'N/A' }}
          - Last Used: {{ 'Never' if result.item.last_used == 0 else (result.item.last_used | int | strftime('%Y-%m-%d %H:%M:%S')) }}
          
          {% endif %}
          {% endfor %}
          {% endif %}
          
          💡 完整的 unused policies 資料已收集完成！
          =============================================

    # 生成 JSON 格式輸出
    - name: 📤 生成結構化輸出
      debug:
        msg: |
          ========= 📤 JSON 格式輸出 =========
          
          {
            "summary": {
              "total_policies": {{ all_policies.json.results | length }},
              "unused_policies": {{ unused_policies | length }},
              "used_policies": {{ (all_policies.json.results | length) - (unused_policies | length) }},
              "vdom": "{{ vdom_name | default('root') }}",
              "scan_time": "{{ ansible_date_time.iso8601 }}"
            },
            "unused_policies": [
              {% for policy in unused_policies | sort(attribute='policyid') %}
              {
                "policyid": {{ policy.policyid }},
                "bytes": {{ policy.bytes }},
                "packets": {{ policy.packets }},
                "last_used": {{ policy.last_used }},
                "last_used_readable": "{{ 'Never' if policy.last_used == 0 else (policy.last_used | int | strftime('%Y-%m-%d %H:%M:%S')) }}",
                "first_used": {{ policy.first_used }},
                "hit_count": {{ policy.hit_count }},
                "session_count": {{ policy.session_count }}
              }{{ ',' if not loop.last else '' }}
              {% endfor %}
            ]
          }
          ===================================

    - name: 🎯 最終總結
      debug:
        msg: |
          ========= 🎯 任務完成總結 =========
          
          ✅ 成功連接 FortiGate API
          ✅ 成功獲取 {{ all_policies.json.results | length }} 條 policies
          ✅ 識別出 {{ unused_policies | length }} 個 unused policies
          
          📋 Unused Policy IDs: 
          {{ unused_policies | map(attribute='policyid') | list | sort | join(', ') if unused_policies | length > 0 else '無' }}
          
          💡 解決方案總結:
          1. API 端點: /api/v2/monitor/firewall/policy
          2. 篩選條件: bytes = 0 AND packets = 0  
          3. 時間欄位: last_used (Unix timestamp)
          4. 相關欄位: hit_count, session_count
          
          🚀 這個 playbook 可以定期執行來監控 unused policies！
          ===================================
