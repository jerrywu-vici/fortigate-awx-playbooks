---
- name: Set FortiGate DHCP Reserved Address
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # --- 請在 AWX Job Template 的 Extra Variables 中傳入以下參數 ---
    # target_ip: "192.168.250.103"
    # target_mac: "00:25:aa:aa:01:03"
    # target_description: "test103_PC_updated"
    dhcp_server_id: "{{ server_id | default('3') }}"

  tasks:
    - name: 1. 獲取所有現有的 DHCP 保留位址
      ansible.builtin.uri:
        url: "https://{{ lookup('env', 'FORTIGATE_HOST') }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address"
        method: GET
        headers:
          Authorization: "Bearer {{ lookup('env', 'FORTIGATE_API_TOKEN') }}"
        validate_certs: false
        status_code: 200
      register: existing_reservations

    # --- 第一個檢查點：MAC 位址衝突檢查 ---
    - name: 2. 檢查點：檢查 MAC 位址是否存在於任何設定中
      ansible.builtin.fail:
        msg: |
          錯誤：執行停止。您提供的 MAC 位址 '{{ target_mac }}' 已被現有設定中的另一個物件使用。
          衝突物件 IP: {{ item.ip }}
          衝突物件描述: {{ item.description | default('N/A', true) }}
          請更換 MAC 位址後再試。
      # 條件：當找到一個物件，它的 MAC 與目標 MAC 相同(忽略大小寫)時，就觸發失敗。
      when: item.mac.lower() == target_mac.lower()
      loop: "{{ existing_reservations.json.results }}"
      loop_control:
        label: "檢查 {{ item.ip }} 的 MAC 位址"

    # --- 第二個檢查點：尋找目標 IP ---
    - name: 3. 尋找要更新的目標物件
      ansible.builtin.set_fact:
        # 使用 selectattr 過濾器建立一個只包含目標 IP 物件的列表
        target_object_list: "{{ existing_reservations.json.results | selectattr('ip', 'equalto', target_ip) | list }}"

    - name: 4. 檢查點：確認目標 IP 是否存在
      ansible.builtin.fail:
        msg: "錯誤：在 DHCP Server {{ dhcp_server_id }} 中找不到目標 IP 位址 '{{ target_ip }}'。請確認 IP 是否正確。"
      # 條件：如果上一步建立的列表長度為 0，代表沒找到任何物件
      when: target_object_list | length == 0

    # --- 執行更新 ---
    - name: 5. 如果找到物件且無衝突，則執行更新
      ansible.builtin.uri:
        # API 路徑需要包含物件的 ID，我們從列表的第一個元素中獲取
        url: "https://{{ lookup('env', 'FORTIGATE_HOST') }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address/{{ target_object_list[0].id }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ lookup('env', 'FORTIGATE_API_TOKEN') }}"
        body:
          # 在 body 中提供要更新的欄位
          mac: "{{ target_mac }}"
          description: "{{ target_description }}"
        body_format: json
        validate_certs: false
        status_code: 200
      register: update_result

    - name: 6. 顯示更新成功訊息
      ansible.builtin.debug:
        msg:
          - "成功更新 DHCP 保留位址！"
          - "  目標 IP: {{ target_ip }}"
          - "  更新後 MAC: {{ target_mac }}"
          - "  更新後描述: {{ target_description }}"
      # 關鍵修正：直接檢查 API 回傳的 revision_changed 狀態
      when: update_result.json is defined and update_result.json.revision_changed | default(false)
