---
# =============================================================================
# FortiGate DHCP Reserved Address Create/Update Playbook v3.0
# 
# 功能說明：
# 1. 支援新增DHCP reserved-address配置
# 2. 支援修改既有DHCP reserved-address配置  
# 3. 自動檢測MAC地址衝突，避免重複分配
# 4. 智能判斷新增或更新操作
# 
# 作者：VICI Network Team
# 版本：v3.0 - Create/Update功能
# =============================================================================

- name: FortiGate DHCP Reserved Address Create/Update v3.0
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # =======================================================================
    # 變數定義區
    # =======================================================================
    
    # 用戶輸入參數（從AWX Survey獲取）
    target_ip: "{{ ip_param }}"
    target_mac: "{{ mac_param }}"
    target_description: "{{ desc_param }}"
    
    # FortiGate系統參數
    dhcp_server_id: "{{ server_id | default('3') }}"
    
    # FortiGate連接參數（從AWX Credential自動注入）
    fortigate_host: "{{ fortigate_host }}"
    fortigate_token: "{{ fortigate_access_token }}"
    vdom_name: "{{ fortigate_vdom | default('root') }}"
    
  tasks:
    # =======================================================================
    # 步驟1：參數驗證
    # =======================================================================
    
    - name: "🔍 Validate AWX Credential Parameters"
      ansible.builtin.fail:
        msg: |
          ❌ 缺少必要的FortiGate Credential參數！請確保已正確設定FortiGate Credential。
      when: fortigate_host is not defined or fortigate_token is not defined

    - name: "📋 Display Input Parameters"
      ansible.builtin.debug:
        msg: |
          ==========================================
          📋 FortiGate DHCP Create/Update 功能
          ==========================================
          🎯 目標IP地址: {{ target_ip }}
          🔗 目標MAC地址: {{ target_mac }}
          📝 目標描述: {{ target_description }}
          🏷️  DHCP Server ID: {{ dhcp_server_id }}
          🌐 FortiGate Host: {{ fortigate_host }}
          🏠 VDOM: {{ vdom_name }}
          ==========================================

    # =======================================================================
    # 步驟2：獲取當前DHCP配置
    # =======================================================================
    
    - name: "🔍 Get Current DHCP Reserved Addresses"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        validate_certs: false
        status_code: 200
      register: existing_reservations

    - name: "📊 Display Current Configuration"
      ansible.builtin.debug:
        msg: |
          🔍 DHCP配置獲取結果：
          - 查詢成功: {{ existing_reservations.status == 200 }}
          - 保留位址數量: {{ existing_reservations.json.results | length }}
          
          📋 當前所有reserved-address配置：
          {% if existing_reservations.json.results | length > 0 %}
          {% for addr in existing_reservations.json.results %}
          - ID: {{ addr.id }}, IP: {{ addr.ip }}, MAC: {{ addr.mac }}, 描述: {{ addr.description | default('無') }}
          {% endfor %}
          {% else %}
          （目前沒有任何reserved-address配置）
          {% endif %}

    # =======================================================================
    # 步驟3：MAC衝突檢測
    # =======================================================================

    - name: "🔍 MAC Conflict Detection"
      ansible.builtin.set_fact:
        mac_conflict_object: "{{ item }}"
      loop: "{{ existing_reservations.json.results }}"
      when:
        - mac_conflict_object is not defined
        - item.mac.lower() == target_mac.lower()
      loop_control:
        label: "檢查 MAC {{ item.mac }}"

    - name: "📋 MAC Conflict Detection Result"
      ansible.builtin.debug:
        msg: |
          ==========================================
          🔍 MAC衝突檢測分析結果
          ==========================================
          {% if mac_conflict_object is defined %}
          ⚠️  找到既有MAC配置:
             - ID: {{ mac_conflict_object.id }}
             - IP: {{ mac_conflict_object.ip }}
             - MAC: {{ mac_conflict_object.mac }}
             - 描述: {{ mac_conflict_object.description | default('無') }}
          
          🚫 MAC衝突狀態: {{ '是' if (mac_conflict_object.ip != target_ip) else '否' }}
          {% else %}
          ℹ️  未找到既有MAC配置
          🚫 MAC衝突狀態: 否
          {% endif %}
          ==========================================

    - name: "🚫 Stop Execution - MAC Conflict"
      ansible.builtin.fail:
        msg: |
          ❌❌❌ MAC衝突檢測失敗！❌❌❌
          
          🔴 衝突詳情：
          - 目標MAC: {{ target_mac }}
          - 目標IP: {{ target_ip }}
          - 衝突原因: MAC {{ target_mac }} 已被分配給 IP {{ mac_conflict_object.ip }}
          
          💡 解決方案：
          1. 使用不同的MAC地址
          2. 或者確認是否要更新既有IP {{ mac_conflict_object.ip }} 的配置
          
          ⚠️  為避免網路衝突，操作已終止！
      when: mac_conflict_object is defined and mac_conflict_object.ip != target_ip

    # =======================================================================
    # 步驟4：尋找目標IP配置
    # =======================================================================
    
    - name: "🔍 Find Target IP Configuration"
      ansible.builtin.set_fact:
        target_object_list: "{{ existing_reservations.json.results | selectattr('ip', 'equalto', target_ip) | list }}"

    - name: "🎯 Determine Operation Type"
      ansible.builtin.set_fact:
        operation_type: >-
          {%- if target_object_list | length > 0 -%}
            更新既有配置
          {%- else -%}
            創建新配置
          {%- endif -%}
        needs_update: >-
          {%- if target_object_list | length == 0 -%}
            true
          {%- else -%}
            {{
              (target_object_list[0].mac != target_mac) or
              (target_object_list[0].description | default('') != target_description)
            }}
          {%- endif -%}
        target_object: "{{ target_object_list[0] if target_object_list | length > 0 else {} }}"

    - name: "📋 Display Operation Plan"
      ansible.builtin.debug:
        msg: |
          ==========================================
          📋 操作執行計畫
          ==========================================
          🎯 操作類型: {{ operation_type }}
          🔄 需要更新: {{ '是' if needs_update else '否' }}
          
          {% if target_object_list | length > 0 %}
          📊 既有配置:
          - ID: {{ target_object.id }}
          - IP: {{ target_object.ip }}
          - MAC: {{ target_object.mac }}
          - 描述: {{ target_object.description | default('無') }}
          {% endif %}
          
          {% if needs_update %}
          📝 將要執行的{{ operation_type }}：
          - IP地址: {{ target_ip }}
          - MAC地址: {{ target_mac }}
          - 描述: {{ target_description }}
          {% else %}
          ℹ️  配置已符合目標狀態，無需更新
          {% endif %}
          ==========================================

    # =======================================================================
    # 步驟5：執行操作
    # =======================================================================

    - name: "✅ Configuration Already Up-to-Date"
      ansible.builtin.debug:
        msg: |
          ✅✅✅ 配置檢查完成 ✅✅✅
          
          🎉 當前配置已符合目標狀態：
          - IP: {{ target_ip }}
          - MAC: {{ target_mac }}
          - 描述: {{ target_description }}
          
          💡 無需執行任何變更操作！
      when: not needs_update

    - name: "🔧 Update Existing DHCP Reserved Address"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address/{{ target_object.id }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        body:
          mac: "{{ target_mac }}"
          description: "{{ target_description }}"
        body_format: json
        validate_certs: false
        status_code: 200
      register: update_result
      when: needs_update and target_object_list | length > 0

    - name: "🆕 Create New DHCP Reserved Address"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ dhcp_server_id }}/reserved-address"
        method: POST
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        body:
          ip: "{{ target_ip }}"
          mac: "{{ target_mac }}"
          description: "{{ target_description }}"
        body_format: json
        validate_certs: false
        status_code: 200
      register: create_result
      when: needs_update and target_object_list | length == 0

    # =======================================================================
    # 步驟6：結果顯示
    # =======================================================================

    - name: "🎉 Update Operation Complete"
      ansible.builtin.debug:
        msg: |
          ✅✅✅ 更新既有配置成功！✅✅✅
          
          📋 更新詳情：
          - 目標IP: {{ target_ip }}
          - 更新後MAC: {{ target_mac }}
          - 更新後描述: {{ target_description }}
          - DHCP Server ID: {{ dhcp_server_id }}
          
          🎯 FortiGate配置已成功更新！
      when: 
        - needs_update
        - target_object_list | length > 0
        - update_result is defined
        - update_result.json.revision_changed | default(false)

    - name: "🎉 Create Operation Complete"
      ansible.builtin.debug:
        msg: |
          ✅✅✅ 創建新配置成功！✅✅✅
          
          📋 創建詳情：
          - 新IP: {{ target_ip }}
          - MAC: {{ target_mac }}
          - 描述: {{ target_description }}
          - DHCP Server ID: {{ dhcp_server_id }}
          
          🎯 FortiGate配置已成功創建！
      when: 
        - needs_update
        - target_object_list | length == 0
        - create_result is defined
        - create_result.json.revision_changed | default(false)

    - name: "📊 Final Execution Summary"
      ansible.builtin.debug:
        msg: |
          ==========================================
          📊 FortiGate DHCP Create/Update 執行摘要
          ==========================================
          🎯 目標配置:
             - IP: {{ target_ip }}
             - MAC: {{ target_mac }}
             - 描述: {{ target_description }}
          
          🔧 執行結果:
             {% if not needs_update %}
             - 狀態: ℹ️  無需變更（配置已是最新）
             {% elif target_object_list | length > 0 and update_result is defined and update_result.json.revision_changed | default(false) %}
             - 狀態: ✅ 更新既有配置成功
             - 目標ID: {{ target_object.id }}
             {% elif target_object_list | length == 0 and create_result is defined and create_result.json.revision_changed | default(false) %}
             - 狀態: ✅ 創建新配置成功
             {% else %}
             - 狀態: ⚠️  未執行操作或操作失敗
             {% endif %}
          
          📅 執行時間: {{ ansible_date_time.iso8601 | default('未知') }}
          ==========================================
