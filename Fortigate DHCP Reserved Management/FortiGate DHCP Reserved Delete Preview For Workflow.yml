---
# =============================================================================
# FortiGate DHCP Reserved Address Delete + Firewall Address Delete Preview v6.1
# 用途：預覽要刪除的MAC配置（DHCP + Firewall Address）
# 功能：整合DHCP Reserved和Firewall Address的預覽功能
# 輸出：顯示DHCP和Firewall兩個功能的變更預覽，設定workflow變數
# 版本：v6.1 - 使用pause模組修正輸出斷行問題
# =============================================================================

- name: FortiGate DHCP Reserved Delete Preview For Workflow v6.1
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    # Survey 參數
    target_mac: "{{ delete_mac_param }}"
    target_dhcp_server_id: "{{ server_id | default('3') }}"
    
    # Server ID 對應關係
    server_mapping:
      "2":
        dhcp_description: "vlan40_PC"
        address_group: "Group_40_PC-Allow-MAC"
      "12":
        dhcp_description: "vlan22_FIC_WAN"  
        address_group: "Group_22_FIC_Allow-MAC"
    
    # API 連接參數
    api_retries: "{{ fortigate_api_retries | default('3') | int }}"
    api_delay: "{{ fortigate_api_delay | default('5') | int }}"
    backup_enabled: "{{ fortigate_backup_enabled | default(true) | bool }}"
    connection_timeout: "{{ fortigate_timeout | default('30') | int }}"
    validate_certs: "{{ fortigate_validate_certs | default(false) | bool }}"
    
  tasks:
    # ==================== 參數驗證區塊 ====================
    - name: "🔍 Validate FortiGate Credentials"
      ansible.builtin.fail:
        msg: "缺少FortiGate Credential參數: {{ missing_params | join(', ') }}"
      vars:
        required_params:
          - fortigate_host
          - fortigate_access_token
        missing_params: "{{ required_params | select('undefined') | list }}"
      when: 
        - fortigate_host is not defined or 
          fortigate_access_token is not defined

    - name: "🔍 Validate Survey Parameters"
      ansible.builtin.fail:
        msg: "缺少Survey參數: {{ missing_survey_params | join(', ') }}"
      vars:
        required_survey_params:
          - delete_mac_param
          - server_id
        missing_survey_params: "{{ required_survey_params | select('undefined') | list }}"
      when: delete_mac_param is not defined or server_id is not defined

    - name: "🔍 Validate Server ID"
      ansible.builtin.fail:
        msg: "不支援的DHCP Server ID: {{ target_dhcp_server_id }}。支援的ID: {{ server_mapping.keys() | list | join(', ') }}"
      when: target_dhcp_server_id not in server_mapping

    # ==================== 初始設定區塊 ====================
    - name: "🔧 Set Server Mapping Information"
      ansible.builtin.set_fact:
        server_info: "{{ server_mapping[target_dhcp_server_id] }}"
        target_address_group: "{{ server_mapping[target_dhcp_server_id].address_group }}"

    - name: "🔍 Validate MAC Address Format"
      ansible.builtin.set_fact:
        mac_valid: "{{ target_mac | regex_search('^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$') is not none }}"

    - name: "❌ MAC Address Format Error"
      ansible.builtin.fail:
        msg: "MAC地址格式錯誤: {{ target_mac }}。正確格式: xx:xx:xx:xx:xx:xx 或 xx-xx-xx-xx-xx-xx"
      when: not mac_valid

    - name: "🔧 Normalize MAC Address Format"
      ansible.builtin.set_fact:
        normalized_mac: "{{ target_mac | replace('-', ':') | lower }}"

    # ==================== API 連接驗證 ====================
    - name: "🔌 Test FortiGate API Connection"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system/global"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        timeout: "{{ connection_timeout }}"
      register: api_test
      retries: "{{ api_retries }}"
      delay: "{{ api_delay }}"

    - name: "✅ API Connection Established"
      ansible.builtin.debug:
        msg: "✅ API連線成功 | FortiGate版本: {{ fortigate_version }}"
      vars:
        fortigate_version: "{{ api_test.json.results.version | default(api_test.json.version | default('未知')) }}"

    # ==================== 預覽資訊顯示 ====================
    - name: "📋 Preview Information Header"
      ansible.builtin.debug:
        msg: "==================== FortiGate DHCP + Firewall Delete Preview v6.1 ===================="

    - name: "📋 Preview Parameters Summary"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          🔍 整合預覽模式 | 目標MAC: {{ normalized_mac }}
          
          DHCP Server: {{ target_dhcp_server_id }} ({{ server_info.dhcp_description }})
          Address Group: {{ target_address_group }}
          Host: {{ fortigate_host }}

    # ==================== DHCP 功能預覽區塊 ====================
    - name: "📊 DHCP Preview Section Header"
      ansible.builtin.debug:
        msg: "==================== DHCP 配置預覽 ===================="

    - name: "🔍 Get Current DHCP Reserved Addresses"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system.dhcp/server/{{ target_dhcp_server_id }}/reserved-address"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        timeout: "{{ connection_timeout }}"
      register: existing_reservations
      retries: "{{ api_retries }}"
      delay: "{{ api_delay }}"

    - name: "🔍 DHCP Search Information"
      ansible.builtin.debug:
        msg: "🔍 搜尋DHCP配置 | 總計: {{ existing_reservations.json.results | length }} 筆 | 目標MAC: {{ normalized_mac }}"

    - name: "🔍 Search for Target MAC in DHCP"
      ansible.builtin.set_fact:
        dhcp_target_object: "{{ item }}"
      loop: "{{ existing_reservations.json.results }}"
      when:
        - dhcp_target_object is not defined
        - item.mac.lower() == normalized_mac
      no_log: true

    - name: "✅ DHCP Search Result"
      ansible.builtin.debug:
        msg: "{{ '✅ DHCP搜尋成功' if dhcp_target_object is defined else '⚠️ DHCP中未找到目標MAC' }} | 檢查: {{ existing_reservations.json.results | length }} 筆 | 找到: {{ '1' if dhcp_target_object is defined else '0' }} 筆"

    - name: "📊 DHCP Current Configuration"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          📊 DHCP當前配置
          
          ID: {{ dhcp_target_object.id }}
          IP: {{ dhcp_target_object.ip }}
          MAC: {{ dhcp_target_object.mac }}
          描述: {{ dhcp_target_object.description | default('空白') }}
      when: dhcp_target_object is defined

    - name: "🧮 Calculate DHCP Reserved MAC"
      ansible.builtin.set_fact:
        ip_fourth_octet: "{{ dhcp_target_object.ip.split('.')[3] }}"
        first_digit: "{{ dhcp_target_object.ip.split('.')[3][0] }}"
        last_two_digits: "{{ dhcp_target_object.ip.split('.')[3][1:] }}"
        dhcp_reserved_mac: "ff:ff:ff:ff:f{{ dhcp_target_object.ip.split('.')[3][0] }}:{{ dhcp_target_object.ip.split('.')[3][1:] }}"
      when: dhcp_target_object is defined

    - name: "🔄 DHCP After Delete Configuration Preview"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          🔄 DHCP還原預覽
          
          ID: {{ dhcp_target_object.id }}
          IP: {{ dhcp_target_object.ip }}
          MAC: {{ dhcp_reserved_mac }}
          描述: Reserved
      when: dhcp_target_object is defined

    # ==================== Firewall 功能預覽區塊 ====================
    - name: "🔥 Firewall Preview Section Header"
      ansible.builtin.debug:
        msg: "==================== Firewall 配置預覽 ===================="

    - name: "🔍 Get All MAC Type Firewall Addresses"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/firewall/address?filter=type==mac"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        timeout: "{{ connection_timeout }}"
      register: firewall_addresses
      retries: "{{ api_retries }}"
      delay: "{{ api_delay }}"

    - name: "🔍 Firewall Search Information"
      ansible.builtin.debug:
        msg: "🔍 搜尋Firewall Address | 總計: {{ firewall_addresses.json.results | length }} 筆 | 篩選: MAC_開頭 | 目標MAC: {{ normalized_mac }}"

    - name: "🔍 Search for Target MAC in Firewall Addresses"
      ansible.builtin.set_fact:
        firewall_target_object: "{{ item }}"
        found_macaddr: "{{ actual_macaddr }}"
      loop: "{{ firewall_addresses.json.results }}"
      vars:
        # 處理macaddr的巢狀結構：macaddr: [{'macaddr': 'xx:xx:xx:xx:xx:xx'}]
        actual_macaddr: >-
          {%- if item.macaddr is string -%}
            {{ item.macaddr }}
          {%- elif item.macaddr is iterable and item.macaddr | length > 0 -%}
            {{ item.macaddr[0].macaddr }}
          {%- else -%}
            
          {%- endif -%}
      when:
        - firewall_target_object is not defined
        - item.name is defined
        - item.name.startswith('MAC_')
        - item.macaddr is defined
        - actual_macaddr | lower == normalized_mac
      no_log: true

    - name: "✅ Firewall Search Result"
      ansible.builtin.debug:
        msg: "{{ '✅ Firewall搜尋成功' if firewall_target_object is defined else '⚠️ Firewall中未找到目標Address' }} | 檢查: {{ mac_address_count }} 筆MAC_ | 找到: {{ '1' if firewall_target_object is defined else '0' }} 筆"
      vars:
        mac_address_count: "{{ firewall_addresses.json.results | selectattr('name', 'defined') | selectattr('name', 'match', '^MAC_.*') | list | length }}"

    - name: "📊 Firewall Target Address Information"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          📊 Firewall目標配置
          
          Name: {{ firewall_target_object.name }}
          MAC: {{ found_macaddr }}
          Comment: {{ firewall_target_object.comment | default('無') }}
      when: firewall_target_object is defined

    # ==================== Address Group 處理區塊 ====================
    - name: "🔍 Get Address Group Configuration"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/firewall/addrgrp/{{ target_address_group }}"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        timeout: "{{ connection_timeout }}"
      register: address_group_config
      retries: "{{ api_retries }}"
      delay: "{{ api_delay }}"
      when: firewall_target_object is defined

    - name: "🔍 Analyze Address Group Membership"
      ansible.builtin.set_fact:
        group_data: "{{ address_group_config.json.results | first }}"
        current_members: "{{ (address_group_config.json.results | first).member }}"
        member_names: "{{ (address_group_config.json.results | first).member | map(attribute='name') | list }}"
        address_in_group: "{{ firewall_target_object.name in member_names }}"
        original_group_members: "{{ (address_group_config.json.results | first).member }}"
        updated_group_members: "{{ (address_group_config.json.results | first).member | rejectattr('name', 'equalto', firewall_target_object.name) | list }}"
      vars:
        member_names: "{{ (address_group_config.json.results | first).member | map(attribute='name') | list }}"
      when: 
        - firewall_target_object is defined
        - address_group_config is defined
        - address_group_config.json.results | length > 0

    - name: "📊 Address Group Current Status"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          📊 Address Group狀態
          
          名稱: {{ target_address_group }}
          目標Address在Group中: {{ 'YES' if address_in_group else 'NO' }}
          當前Members數: {{ original_group_members | length }}
      when: 
        - firewall_target_object is defined
        - group_data is defined

    - name: "🔄 Address Group After Remove Preview"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          🔄 移除後預覽
          
          Group: {{ target_address_group }}
          移除Member: {{ firewall_target_object.name }}
          剩餘Members數: {{ updated_group_members | length }}
      when: 
        - firewall_target_object is defined
        - address_in_group is defined
        - address_in_group

    # ==================== 整合預覽總結區塊 ====================
    - name: "📊 Integrated Preview Summary Header"
      ansible.builtin.debug:
        msg: "==================== 整合預覽總結 ===================="

    - name: "📊 Operations Summary"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          📊 操作總覽
          
          DHCP操作: {{ 'YES' if dhcp_target_object is defined else 'SKIP' }}
          Firewall操作: {{ 'YES' if firewall_target_object is defined else 'SKIP' }}
          Address在Group中: {{ 'YES' if (firewall_target_object is defined and address_in_group is defined and address_in_group) else 'NO' }}

    - name: "💾 Record Original Configuration for Backup"
      ansible.builtin.set_fact:
        integrated_backup_info:
          timestamp: "{{ ansible_date_time.iso8601 }}"
          dhcp_config: "{{ dhcp_target_object | default({}) }}"
          firewall_config: "{{ firewall_target_object | default({}) }}"
          address_group_config:
            name: "{{ target_address_group }}"
            original_members: "{{ original_group_members | default([]) }}"
            updated_members: "{{ updated_group_members | default([]) }}"
          server_info: "{{ server_info }}"
          purpose: "記錄DHCP和Firewall變更前的原始配置"
      when: backup_enabled

    - name: "⚠️ Configuration Change Warning"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          ⚠️ 警告：此操作將永久修改FortiGate的DHCP和Firewall配置！
          
          請在Approval Node中仔細確認後再批准執行。

    # ==================== Workflow 變數設定 ====================
    - name: "📤 Set Integrated Workflow Variables"
      ansible.builtin.set_stats:
        data:
          # DHCP 相關變數
          wf_dhcp_enabled: "{{ dhcp_target_object is defined }}"
          wf_dhcp_target_id: "{{ dhcp_target_object.id | default('') }}"
          wf_dhcp_target_ip: "{{ dhcp_target_object.ip | default('') }}"
          wf_dhcp_original_mac: "{{ dhcp_target_object.mac | default('') }}"
          wf_dhcp_reserved_mac: "{{ dhcp_reserved_mac | default('') }}"
          wf_dhcp_original_desc: "{{ dhcp_target_object.description | default('') }}"
          wf_ip_fourth_octet: "{{ ip_fourth_octet | default('') }}"
          wf_first_digit: "{{ first_digit | default('') }}"
          wf_last_two_digits: "{{ last_two_digits | default('') }}"
          # Firewall 相關變數
          wf_firewall_enabled: "{{ firewall_target_object is defined }}"
          wf_firewall_address_name: "{{ firewall_target_object.name | default('') }}"
          wf_firewall_address_mac: "{{ found_macaddr | default('') }}"
          wf_firewall_address_comment: "{{ firewall_target_object.comment | default('') }}"
          wf_address_group_name: "{{ target_address_group }}"
          wf_address_in_group: "{{ address_in_group | default(false) }}"
          wf_original_group_members: "{{ original_group_members | default([]) | to_json }}"
          wf_updated_group_members: "{{ updated_group_members | default([]) | to_json }}"
          # 共用變數
          wf_server_id: "{{ target_dhcp_server_id }}"
          wf_delete_mac: "{{ normalized_mac }}"
          wf_server_info: "{{ server_info | to_json }}"
          wf_backup_info: "{{ integrated_backup_info | default({}) | to_json }}"
          wf_vdom_name: "{{ fortigate_vdom | default('root') }}"
          wf_preview_version: "v6.1"

    - name: "🎯 Integrated Preview Complete"
      ansible.builtin.pause:
        seconds: 0
        prompt: |
          🎯 整合預覽完成 | 等待人工確認
          
          MAC: {{ normalized_mac }}
          DHCP: {{ 'YES' if dhcp_target_object is defined else 'SKIP' }}
          Firewall: {{ 'YES' if firewall_target_object is defined else 'SKIP' }}
          版本: v6.1
