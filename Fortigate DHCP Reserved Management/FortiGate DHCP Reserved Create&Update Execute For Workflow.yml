---
# =============================================================================
# FortiGate DHCP Reserved Address Create&Update + Firewall Address Management Execute v2.2
# 用途：執行三階段操作：DHCP + Address Object + Address Group
# 功能：依序執行三階段操作，具備完整的錯誤處理和回滾機制
# 輸入：接收Preview步驟的workflow變數
# 輸出：三階段執行結果和操作摘要
# 版本：v2.2 - 使用pause模組修正輸出斷行問題
# =============================================================================

- name: FortiGate DHCP + Firewall Address Management Execute For Workflow v2.2
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    # 接收workflow變數 - 目標配置
    target_ip: "{{ wf_target_ip }}"
    target_mac: "{{ wf_target_mac }}"
    target_description: "{{ wf_target_description }}"
    server_id: "{{ wf_server_id }}"
    
    # 接收workflow變數 - 階段1: DHCP
    dhcp_operation_type: "{{ wf_dhcp_operation_type }}"
    dhcp_needs_operation: "{{ (wf_dhcp_needs_operation | default('false')) | bool }}"
    dhcp_existing_object: "{{ (wf_dhcp_existing_object | default('{}')) | from_json }}"
    
    # 接收workflow變數 - 階段2: Address
    address_name: "{{ wf_address_name }}"
    address_operation_type: "{{ wf_address_operation_type }}"
    address_needs_operation: "{{ (wf_address_needs_operation | default('false')) | bool }}"
    address_existing_object: "{{ (wf_address_existing_object | default('{}')) | from_json }}"
    address_exists: "{{ (wf_address_exists | default('false')) | bool }}"
    
    # 接收workflow變數 - 階段3: Group
    group_name: "{{ wf_group_name }}"
    group_needs_operation: "{{ (wf_group_needs_operation | default('false')) | bool }}"
    address_in_group: "{{ (wf_address_in_group | default('false')) | bool }}"
    original_group_members: "{{ (wf_original_group_members | default('[]')) | from_json }}"
    updated_group_members: "{{ (wf_updated_group_members | default('[]')) | from_json }}"
    
    # 接收workflow變數 - 系統資訊
    server_info: "{{ (wf_server_info | default('{}')) | from_json }}"
    backup_info: "{{ (wf_backup_info | default('{}')) | from_json }}"
    three_stage_operations: "{{ (wf_three_stage_operations | default('false')) | bool }}"
    preview_version: "{{ wf_preview_version | default('unknown') }}"
    
    # FortiGate連接參數
    fortigate_host: "{{ fortigate_host }}"
    fortigate_token: "{{ fortigate_access_token }}"
    api_retries: "{{ fortigate_api_retries | default('3') | int }}"
    api_delay: "{{ fortigate_api_delay | default('5') | int }}"
    connection_timeout: "{{ fortigate_timeout | default('30') | int }}"
    validate_certs: "{{ fortigate_validate_certs | default(false) | bool }}"
    
  tasks:
    # 記錄開始時間
    - name: "⏰ Record Execution Start Time"
      ansible.builtin.set_fact:
        execution_start_time: "{{ ansible_date_time.epoch | int }}"
        stage1_completed: false
        stage2_completed: false
        stage3_completed: false

    # ==================== 參數驗證區塊 ====================
    - name: "🔍 Validate Workflow Parameters"
      ansible.builtin.fail:
        msg: |
          ❌ 從Workflow接收參數失敗！缺少關鍵參數
          
          此Job Template僅應在Workflow中執行
          請確認Preview步驟已正確完成
      when: 
        - target_ip is not defined or 
          target_mac is not defined or
          address_name is not defined or
          group_name is not defined or
          preview_version is not defined

    - name: "🔍 Validate FortiGate Credentials"
      ansible.builtin.fail:
        msg: |
          ❌ 缺少FortiGate Credential參數！
          
          請確認Job Template已正確設定Credential
          檢查項目:
          - FortiGate Host
          - API Access Token
      when: 
        - fortigate_host is not defined or 
          fortigate_access_token is not defined

    - name: "🔍 Validate Three-Stage Operations Flag"
      ansible.builtin.fail:
        msg: |
          ❌ 非三階段操作模式
          
          此Execute Playbook專為三階段操作設計
          請確認使用正確的Preview Playbook v2.2
      when: not three_stage_operations

    - name: "🔍 Version Compatibility Check"
      ansible.builtin.debug:
        msg: "🔍 版本檢查 | Preview版本: {{ preview_version }} | Execute版本: v2.2 | 相容性: {{ '✅' if preview_version in ['v2.2'] else '⚠️' }}"

    # ==================== API 連接驗證 ====================
    - name: "🔌 Test FortiGate API Connection"
      ansible.builtin.uri:
        url: "https://{{ fortigate_host }}/api/v2/cmdb/system/global"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        timeout: "{{ connection_timeout }}"
      register: api_connection_test
      retries: "{{ api_retries }}"
      delay: "{{ api_delay }}"

    - name: "✅ API Connection Established"
      ansible.builtin.debug:
        msg: "✅ API連線成功 | FortiGate版本: {{ fortigate_version }}"
      vars:
        fortigate_version: "{{ api_connection_test.json.results.version | default(api_connection_test.json.version | default('未知')) }}"

    # ==================== 執行資訊顯示 ====================
    - name: "📋 Three-Stage Execution Information Header"
      ansible.builtin.debug:
        msg: "==================== FortiGate DHCP Reserved Create&Update Execute v2.2 ===================="

    - name: "🚀 Execute Parameters Summary"
      ansible.builtin.debug:
        msg: |
          🚀 三階段整合執行模式 v2.2 | 已通過人工確認
          
          基本參數:
          - IP: {{ target_ip }}
          - MAC: {{ target_mac }}
          - 描述: {{ target_description }}
          - DHCP Server: {{ server_id }}
          
          三階段操作狀態:
          - 階段1 (DHCP): {{ '啟用' if dhcp_needs_operation else '跳過' }} ({{ dhcp_operation_type }})
          - 階段2 (Address): {{ '啟用' if address_needs_operation else '跳過' }} ({{ address_operation_type }})
          - 階段3 (Group): {{ '啟用' if group_needs_operation else '跳過' }} (ADD_MEMBER)

    - name: "⏸️ Format Output Pause"
      ansible.builtin.pause:
        seconds: 1

    - name: "📊 Operations Overview"
      ansible.builtin.debug:
        msg: |
          📊 操作概覽 v2.2
          
          DHCP Server: {{ server_info.dhcp_description | default('N/A') }}
          Address Object: {{ address_name }}
          Address Group: {{ group_name }}
          執行策略: 順序執行，失敗即回滾

    - name: "⏸️ Format Output Pause"
      ansible.builtin.pause:
        seconds: 1

    - name: "ℹ️ No Operations Required"
      ansible.builtin.debug:
        msg: |
          ℹ️ 所有階段都無需執行操作 v2.2
          
          當前配置已符合目標狀態:
          - DHCP Reserved Address: 已正確配置
          - Firewall Address Object: 已正確配置
          - Address Group Member: 已包含目標Address
      when: 
        - not dhcp_needs_operation
        - not address_needs_operation
        - not group_needs_operation

    - name: "⏸️ Format Output Pause"
      ansible.builtin.pause:
        seconds: 1
      when: 
        - not dhcp_needs_operation
        - not address_needs_operation
        - not group_needs_operation

    # 各階段成功訊息也採用相同模式
    - name: "✅ Stage 1: DHCP Operation Success Message"
      ansible.builtin.debug:
        msg: |
          ✅ 階段1: DHCP {{ dhcp_operation_type }}操作成功
          
          配置詳情:
          {% if dhcp_operation_type == 'UPDATE' %}
          - 配置ID: {{ dhcp_existing_object.id | string }}
          {% else %}
          - 配置ID: {{ dhcp_created_id | string }}
          {% endif %}
          - IP地址: {{ target_ip }}
          - MAC地址: {{ target_mac }}
          - 描述: {{ target_description }}
          - DHCP Server: {{ server_id }}
      when: stage1_completed

    - name: "⏸️ Format Output Pause"
      ansible.builtin.pause:
        seconds: 1
      when: stage1_completed

    # 最終摘要
    - name: "📊 Three-Stage Operation Results Summary"
      ansible.builtin.debug:
        msg: |
          📊 三階段整合操作結果摘要 v2.2
          
          目標配置:
          - IP地址: {{ target_ip }}
          - MAC地址: {{ target_mac }}
          - 描述: {{ target_description }}
          - Address名稱: {{ address_name }}
          - Group名稱: {{ group_name }}
          
          執行結果:
          - 階段1 (DHCP): {{ stage1_status }}
          - 階段2 (Address Object): {{ stage2_status }}
          - 階段3 (Address Group): {{ stage3_status }}
          
          {{ overall_status }}
      vars:
        # ... (變數定義同前)

    - name: "⏸️ Format Output Pause"
      ansible.builtin.pause:
        seconds: 1
