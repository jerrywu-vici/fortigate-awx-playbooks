---
- name: Create or Update FortiGate Firewall Address using URI Module
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # 統一處理變數，確保檢查和建立時使用相同的名稱
    target_address_name: "{{ address_name | default('AWX_URI_Test_Address') }}"
    target_address_subnet: "{{ address_subnet | default('5.5.5.5 255.255.255.255') }}"

  tasks:
    - name: 檢查防火牆位址物件是否存在
      ansible.builtin.uri:
        # 查詢特定名稱的物件。使用 urlencode 以處理可能存在的特殊字元。
        url: "https://{{ lookup('env', 'FORTIGATE_HOST') }}/api/v2/cmdb/firewall/address/{{ target_address_name | urlencode }}"
        method: GET
        headers:
          Authorization: "Bearer {{ lookup('env', 'FORTIGATE_API_TOKEN') }}"
        validate_certs: false
        # 將 200 (找到) 和 404 (未找到) 都視為成功的狀態碼，這樣 Playbook 不會失敗
        status_code: [200, 404]
      register: check_result

    - name: 如果物件已存在，則顯示訊息
      ansible.builtin.debug:
        msg: "防火牆位址物件 '{{ target_address_name }}' 已存在，無需建立。"
      when: check_result.status == 200

    - name: 如果物件不存在，則建立它
      ansible.builtin.uri:
        url: "https://{{ lookup('env', 'FORTIGATE_HOST') }}/api/v2/cmdb/firewall/address"
        method: POST
        headers:
          Authorization: "Bearer {{ lookup('env', 'FORTIGATE_API_TOKEN') }}"
        body:
          name: "{{ target_address_name }}"
          subnet: "{{ target_address_subnet }}"
          type: "ipmask"
          comment: "Managed by Ansible AWX"
        body_format: json
        validate_certs: false
        status_code: 200
      # 只有在檢查結果為 404 (未找到) 時，才執行此建立任務
      when: check_result.status == 404
      register: create_result

    - name: 顯示建立結果
      ansible.builtin.debug:
        msg: "成功建立防火牆位址物件: {{ create_result.json }}"
      # 只有在 "建立" 任務實際執行並產生變更時，才顯示此訊息
      when: create_result is changed
