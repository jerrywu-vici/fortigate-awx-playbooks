---
- name: Query FortiGate Unused Firewall Policies (Optimized)
  hosts: localhost
  gather_facts: false
  vars:
    fortigate_api_url: "https://{{ fortigate_host }}:{{ fortigate_api_port | default('443') }}"
    current_timestamp: "{{ ansible_date_time.epoch | int }}"
    threshold_timestamp: "{{ (current_timestamp | int) - ((months_threshold | default('6') | int) * 30 * 24 * 3600) }}"

  tasks:
    # =================== 安全檢查 ===================
    - name: 安全提醒 - 此playbook為只讀模式
      debug:
        msg: "🔍 開始查詢FortiGate未使用的Policy (只讀模式)"

    # =================== 資料收集階段 ===================
    - name: 查詢所有Firewall Policy設定
      uri:
        url: "{{ fortigate_api_url }}/api/v2/cmdb/firewall/{{ policy_type | default('policy') }}"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        body_format: form-urlencoded
        body:
          vdom: "{{ vdom_name | default('root') }}"
        validate_certs: "{{ fortigate_validate_certs | default(false) }}"
        timeout: "{{ fortigate_timeout | default('60') | int }}"
      register: policy_config_result
      retries: "{{ fortigate_api_retries | default('3') | int }}"
      delay: "{{ fortigate_api_delay | default('5') | int }}"

    - name: 顯示Policy查詢進度
      debug:
        msg: "✅ 找到 {{ policy_config_result.json.results | length }} 個Policy，開始分析..."

    # =================== 使用Python腳本處理資料 ===================
    - name: 創建臨時Python腳本
      copy:
        content: |
          #!/usr/bin/env python3
          import json
          import sys
          from datetime import datetime
          
          def main():
              # 從環境變數讀取資料
              configs_str = """{{ policy_config_result.json.results | to_json }}"""
              threshold = {{ threshold_timestamp }}
              current_time = {{ current_timestamp }}
              include_never = {{ include_never_used | default(true) | to_json }}
              months_threshold = {{ months_threshold | default('6') }}
              
              try:
                  configs = json.loads(configs_str)
              except:
                  print(json.dumps({"error": "Failed to parse config data"}))
                  return
              
              unused_policies = []
              summary = {
                  'total': len(configs),
                  'enabled': 0,
                  'unused_long_term': 0,
                  'unused_never': 0,
                  'total_unused': 0
              }
              
              for config in configs:
                  policy_id = str(config.get('policyid', ''))
                  is_enabled = config.get('status', 'enable') == 'enable'
                  
                  if is_enabled:
                      summary['enabled'] += 1
                  
                  # 簡化版：假設沒有統計資料，所有Policy都算"從未使用"
                  # 在生產環境中，您需要單獨查詢統計資料
                  last_used = 0
                  hit_count = 0
                  is_never_used = True
                  is_old_unused = False
                  
                  # 判斷是否為未使用
                  is_unused = is_old_unused or (is_never_used and include_never)
                  
                  if is_unused:
                      days_ago = -1  # 表示從未使用
                      
                      policy_data = {
                          'policy_id': policy_id,
                          'name': config.get('name', f'Policy_{policy_id}'),
                          'status': config.get('status', 'enable'),
                          'action': config.get('action', 'accept'),
                          'srcintf': ','.join(config.get('srcintf', [])),
                          'dstintf': ','.join(config.get('dstintf', [])),
                          'srcaddr': ','.join(config.get('srcaddr', [])),
                          'dstaddr': ','.join(config.get('dstaddr', [])),
                          'service': ','.join(config.get('service', [])),
                          'comments': config.get('comments', ''),
                          'last_used': last_used,
                          'last_used_readable': 'Never',
                          'hit_count': hit_count,
                          'days_since_last_used': days_ago,
                          'is_never_used': is_never_used,
                          'is_enabled': is_enabled
                      }
                      
                      unused_policies.append(policy_data)
                      summary['total_unused'] += 1
                      summary['unused_never'] += 1
              
              result = {
                  'unused_policies': unused_policies,
                  'summary': summary
              }
              
              print(json.dumps(result))
          
          if __name__ == "__main__":
              main()
        dest: "/tmp/analyze_policies.py"
        mode: '0755'

    - name: 執行Policy分析腳本
      command: python3 /tmp/analyze_policies.py
      register: analysis_output

    - name: 解析分析結果
      set_fact:
        analysis_result: "{{ analysis_output.stdout | from_json }}"

    # =================== 簡化版：逐個查詢統計（可選） ===================
    - name: 查詢前5個Policy的統計資料作為示例
      uri:
        url: "{{ fortigate_api_url }}/api/v2/monitor/firewall/policy/select"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_access_token }}"
        body_format: form-urlencoded
        body:
          vdom: "{{ vdom_name | default('root') }}"
          policyid: "{{ item.policyid }}"
        validate_certs: "{{ fortigate_validate_certs | default(false) }}"
        timeout: "{{ fortigate_timeout | default('15') | int }}"
        status_code: [200, 424]
      register: sample_stats
      loop: "{{ policy_config_result.json.results[:5] }}"
      failed_when: false
      no_log: true
      when: 
        - policy_config_result.json.results | length > 0
        - detailed_analysis | default(false) | bool

    # =================== 應用簡單過濾條件 ===================
    - name: 應用基本過濾條件
      set_fact:
        filtered_policies: "{{ final_filtered }}"
      vars:
        exclude_ids: "{{ filter_options.exclude_policy_ids | default([]) | map('string') | list }}"
        min_id_str: "{{ filter_options.min_policy_id | default('') }}"
        max_id_str: "{{ filter_options.max_policy_id | default('') }}"
        final_filtered: |
          [
          {% for policy in analysis_result.unused_policies %}
          {% set skip = false %}
          {% if exclude_ids and policy.policy_id in exclude_ids %}
          {% set skip = true %}
          {% endif %}
          {% if min_id_str != '' and policy.policy_id | int < min_id_str | int %}
          {% set skip = true %}
          {% endif %}
          {% if max_id_str != '' and policy.policy_id | int > max_id_str | int %}
          {% set skip = true %}
          {% endif %}
          {% if not include_disabled | default(false) and not policy.is_enabled %}
          {% set skip = true %}
          {% endif %}
          {% if not skip %}
          {{ policy | to_json }}{% if not loop.last %},{% endif %}
          {% endif %}
          {% endfor %}
          ]

    # =================== 結果摘要 ===================
    - name: 顯示分析摘要
      debug:
        msg: |
          ========= FortiGate Policy 分析摘要 =========
          VDOM: {{ vdom_name | default('root') }}
          
          📊 統計結果:
          - 總Policy數量: {{ analysis_result.summary.total }}
          - 啟用的Policy: {{ analysis_result.summary.enabled }}
          - 找到符合條件的Policy: {{ filtered_policies | length }}
          
          ⚠️ 注意: 此查詢基於Policy設定，未包含詳細使用統計
          {% if not detailed_analysis | default(false) %}
          如需詳細統計分析，請設定 detailed_analysis: true
          {% endif %}
          ==========================================

    # =================== 顯示Policy列表（限制顯示數量） ===================
    - name: 顯示Policy清單（前20筆）
      debug:
        msg: |
          ========= Policy 清單 (前20筆) =========
          {% for policy in filtered_policies[:20] %}
          {{ "%2d" | format(loop.index) }}. Policy {{ policy.policy_id }}: {{ policy.name }}
              狀態: {{ policy.status }} | 動作: {{ policy.action }}
              來源: {{ policy.srcintf }} -> {{ policy.dstintf }}
              地址: {{ policy.srcaddr }} -> {{ policy.dstaddr }}
              服務: {{ policy.service }}
              {% if policy.comments %}備註: {{ policy.comments }}{% endif %}
          {% endfor %}
          {% if filtered_policies | length > 20 %}
          
          ⚠️ 還有 {{ filtered_policies | length - 20 }} 筆Policy未顯示
          完整清單請查看匯出的CSV檔案
          {% endif %}
          ======================================
      when: filtered_policies | length > 0

    # =================== 檔案匯出 ===================
    - name: 建立artifacts目錄
      file:
        path: "{{ playbook_dir }}/artifacts"
        state: directory
      when: export_to_file | default(false) | bool

    - name: 匯出Policy清單CSV
      copy:
        content: |
          # FortiGate Policy List - {{ ansible_date_time.iso8601 }}
          # VDOM: {{ vdom_name | default('root') }}
          # Total Policies: {{ analysis_result.summary.total }}
          # Listed Policies: {{ filtered_policies | length }}
          
          policy_id,name,status,action,srcintf,dstintf,srcaddr,dstaddr,service,comments
          {% for policy in filtered_policies %}
          {{ policy.policy_id }},"{{ policy.name | replace('"', '""') }}",{{ policy.status }},{{ policy.action }},"{{ policy.srcintf }}","{{ policy.dstintf }}","{{ policy.srcaddr }}","{{ policy.dstaddr }}","{{ policy.service }}","{{ policy.comments | replace('"', '""') }}"
          {% endfor %}
        dest: "{{ playbook_dir }}/artifacts/policy_list_{{ ansible_date_time.epoch }}.csv"
      when: export_to_file | default(false) | bool

    - name: 生成Policy管理腳本
      copy:
        content: |
          # FortiGate Policy Management Script
          # Generated: {{ ansible_date_time.iso8601 }}
          # VDOM: {{ vdom_name | default('root') }}
          
          # ⚠️ 重要：此腳本僅供參考，請人工審查後執行
          
          # === 備份當前設定 ===
          execute backup config management-station comment "policy-review-{{ ansible_date_time.date }}"
          
          # === 停用指定Policy（請根據需要選擇執行） ===
          config firewall policy
          {% for policy in filtered_policies[:10] %}
              # Policy {{ policy.policy_id }}: {{ policy.name }}
              # 來源: {{ policy.srcaddr }} -> 目的: {{ policy.dstaddr }}
              # edit {{ policy.policy_id }}
              #     set status disable
              #     set comments "{{ policy.comments }} [REVIEW-{{ ansible_date_time.date }}]"
              # next
          {% endfor %}
          end
          
          # === 檢查命令 ===
          # 檢查Policy狀態
          show firewall policy
          
          # 檢查Policy統計
          diagnose firewall iprope show 100000
        dest: "{{ playbook_dir }}/artifacts/policy_management_{{ ansible_date_time.epoch }}.cli"
        mode: '0644'
      when: 
        - export_to_file | default(false) | bool
        - filtered_policies | length > 0

    # =================== 清理臨時檔案 ===================
    - name: 清理臨時腳本
      file:
        path: "/tmp/analyze_policies.py"
        state: absent

    # =================== 最終報告 ===================
    - name: 查詢完成報告
      debug:
        msg: |
          🎯 Policy查詢完成！
          
          📈 結果摘要:
          - 總Policy數量: {{ analysis_result.summary.total }}
          - 啟用Policy數量: {{ analysis_result.summary.enabled }}
          - 符合條件Policy: {{ filtered_policies | length }}
          
          {% if export_to_file | default(false) | bool %}
          📁 匯出檔案:
          - policy_list_{{ ansible_date_time.epoch }}.csv
          - policy_management_{{ ansible_date_time.epoch }}.cli
          
          請到AWX Job的Artifacts區塊下載檔案
          {% endif %}
          
          💡 建議後續動作:
          1. 審查匯出的Policy清單
          2. 識別確實不需要的Policy
          3. 在維護時間窗口測試停用
          4. 觀察影響後決定是否刪除
          
          ⚠️ 所有變更請務必人工確認後執行
