---
- name: AWX Output Line Break Test v2
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    test_ip: "172.23.40.176"
    test_mac: "e8:b0:c5:ca:71:f5"
    test_description: "Daphne_NB_WLAN"

  tasks:
    - name: "🧪 Test A: Using pause module"
      ansible.builtin.pause:
        prompt: |-
          🧪 測試A: 使用pause模組
          
          基本參數:
          - IP: {{ test_ip }}
          - MAC: {{ test_mac }}
          - 描述: {{ test_description }}
          
          這樣能正確斷行嗎？
          按 Enter 繼續...
        seconds: 1

    - name: "🧪 Test B: Using assert (always true)"
      ansible.builtin.assert:
        that: true
        success_msg: |-
          🧪 測試B: 使用assert成功訊息
          
          這是成功訊息的多行測試
          第一行內容
          第二行內容
          第三行內容

    - name: "🧪 Test C: Using fail with when false"
      ansible.builtin.fail:
        msg: |-
          🧪 測試C: 使用fail模組（但不會真的失敗）
          
          這個應該不會執行，因為when條件是false
          但如果執行了，能看到斷行嗎？
      when: false

    - name: "🧪 Test D: Using shell echo"
      ansible.builtin.shell: |
        echo "🧪 測試D: 使用shell echo"
        echo ""
        echo "基本參數:"
        echo "- IP: {{ test_ip }}"
        echo "- MAC: {{ test_mac }}"
        echo "- 描述: {{ test_description }}"
        echo ""
        echo "多行輸出測試完成"
      register: shell_result

    - name: "🧪 Test D Result: Display shell output"
      ansible.builtin.debug:
        var: shell_result.stdout

    - name: "🧪 Test E: Using template to file"
      ansible.builtin.template:
        src: test_template.j2
        dest: /tmp/test_output.txt
      vars:
        template_content: |-
          🧪 測試E: 使用template模組
          
          基本參數:
          - IP: {{ test_ip }}
          - MAC: {{ test_mac }}
          - 描述: {{ test_description }}
          
          這是template模組的測試
      ignore_errors: true

    - name: "🧪 Test E Result: Read template file"
      ansible.builtin.slurp:
        src: /tmp/test_output.txt
      register: template_result
      ignore_errors: true

    - name: "🧪 Test E Output"
      ansible.builtin.debug:
        msg: "{{ template_result.content | b64decode }}"
      when: template_result is defined and not template_result.failed

    - name: "🧪 Test F: Using lineinfile for each line"
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop:
        - "🧪 測試F: 逐行輸出"
        - ""
        - "基本參數:"
        - "- IP: {{ test_ip }}"
        - "- MAC: {{ test_mac }}"
        - "- 描述: {{ test_description }}"
        - ""
        - "逐行輸出測試完成"

    - name: "🧪 Test G: Using command printf"
      ansible.builtin.command: 
        cmd: "printf \"🧪 測試G: 使用printf\\\\n\\\\n基本參數:\\\\n- IP: {{ test_ip }}\\\\n- MAC: {{ test_mac }}\\\\n- 描述: {{ test_description }}\\\\n\\\\n測試完成\\\\n\""
      register: printf_result

    - name: "🧪 Test G Result: Display printf output"
      ansible.builtin.debug:
        var: printf_result.stdout
